<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Typography.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="Toggl.ButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1"
                            BorderBrush="{DynamicResource Toggl.PrimaryHoverOrText}">
                        <Rectangle SnapsToDevicePixels="True"
                                   Stroke="White"
                                   StrokeThickness="1"
                                   UseLayoutRounding="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="Toggl.Button.ContentTemplate">
        <TextBlock Style="{StaticResource Toggl.BodyText}" Text="{Binding}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
    </DataTemplate>

    <Style x:Key="Toggl.PrimaryButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Toggl.PrimaryButtonBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Toggl.PrimaryButtonBackground}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource Toggl.ButtonFocusVisualStyle}" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="Foreground" Value="{DynamicResource Toggl.PrimaryTextBrush}" />
        <Setter Property="Padding" Value="10 6 10 6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ContentTemplate" Value="{StaticResource Toggl.Button.ContentTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Toggl.Button.MouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.PrimaryButtonPressedBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Toggl.DisabledTextBrush}" />
                <Setter Property="Background" Value="{DynamicResource Toggl.DisabledElementBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="Toggl.AccentButton" BasedOn="{StaticResource Toggl.PrimaryButton}">
        <Setter Property="Background" Value="{DynamicResource Toggl.AccentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Toggl.AccentBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Toggl.Button.Accent.MouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Toggl.PrimaryHoverOrText}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>