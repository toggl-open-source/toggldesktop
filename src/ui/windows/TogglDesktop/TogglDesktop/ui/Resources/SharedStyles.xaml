<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:toggl="clr-namespace:TogglDesktop"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ImageBrush x:Key="ViewBackgroundDark"
        ImageSource="/TogglDesktop;component/Resources/timerDarkBg.png"
        AlignmentX="Left" AlignmentY="Top"
        TileMode="Tile" Stretch="UniformToFill"
        Viewport="0 0 634 822" ViewportUnits="Absolute"/>
    <ImageBrush x:Key="ViewBackgroundLight"
        ImageSource="/TogglDesktop;component/Resources/timerLightBg.png"
        AlignmentX="Left" AlignmentY="Top"
        TileMode="Tile" Stretch="UniformToFill"
        Viewport="0 0 634 822" ViewportUnits="Absolute"/>

    <FontFamily x:Key="DefaultFont">/TogglDesktop;component/Resources/Fonts/#Roboto, Segoe UI</FontFamily>

    <sys:Double x:Key="TimerHeight">50</sys:Double>

    <sys:Double x:Key="EditViewMarginH">12</sys:Double>
    <sys:Double x:Key="EditViewMarginV">40</sys:Double>

    <Style TargetType="Control">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="13.3" />
        <Setter Property="Foreground" Value="#252525"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Background" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="normalBorder" 
                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">

                        <ScrollViewer 
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="0" 
                                    IsTabStop="False" 
                                    Margin="2" 
                                    Background="{x:Null}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <Decorator 
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                x:Name="PART_ContentHost" />

                        </ScrollViewer>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="toggl:ExtendedTextBox" BasedOn="{StaticResource {x:Type TextBox}}">

    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontSize" Value="13.3" />
        <Setter Property="Foreground" Value="#252525"/>
        <Setter Property="UseLayoutRounding" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#B2252525"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    
    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Margin" Value="0 0 0 4" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#B2252525"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="AutotrackerRulesBackground">
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F4F4F4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SyncingIndicatorCount" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="9" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#757575"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#757575"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AutotrackerRulesText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="8, 0"/>
    </Style>

    <Style x:Key="AutotrackerRulesDeleteButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="2">
                        <Image Source="/TogglDesktop;component/Resources/icon-x.png" Margin="6" Stretch="Fill"></Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="False">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#33999999"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#66999999"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextButton" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle Height="1" Fill="{TemplateBinding Foreground}" VerticalAlignment="Bottom" />

                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}">

                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="Foreground"
                                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                    <Setter Property="FontSize"
                                        Value="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="RoundedCornersButtonBase" TargetType="ButtonBase" BasedOn="{StaticResource {x:Type Control}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}">

                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="Foreground"
                                        Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                    <Setter Property="FontSize"
                                        Value="{Binding Path=FontSize, RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}} }" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="RaisedButton" TargetType="Button" BasedOn="{StaticResource RoundedCornersButtonBase}">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Background" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#eaeaea"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#d6d6d6"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#77000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlatButton" TargetType="Button" BasedOn="{StaticResource RoundedCornersButtonBase}">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#33999999"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#66999999"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#77000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AutoCompleteInlineButton" TargetType="Button" BasedOn="{StaticResource RoundedCornersButtonBase}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EBEBEB"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#D6D6D6"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
